[project]
name = "nhp_products"
version = "0.1.0"
description = "Data science products and scripts to support use and development of the NHP model"

requires-python = ">=3.12"

dependencies = [
    # Azure packages
    "azure-core>=1.32.0",
    "azure-identity>=1.17.1",
    "azure-storage-blob>=12.24.0",

    # Data science core
    "pandas>=2.2.3",
    "numpy>=2.1.3",
    "pyarrow>=18.1.0",

    # HTTP/Network
    "requests>=2.32.3",
    "httpx>=0.28.0",

    # Utilities
    "python-dateutil>=2.9.0",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.2",
    "cryptography>=44.0.0",
    "tqdm>=4.67.1",

    # Auth
    "msal>=1.31.0",
    "msal-extensions>=1.1.0",
    "pyjwt>=2.10.1",
]


# Explicitly specify which packages to include
[tool.setuptools]
packages = ["nhpy"]           # Only include nhpy, exclude notebooks

[project.optional-dependencies]
dev = [
    # Jupyter ecosystem
    "jupyter>=1.1.1",
    "jupyterlab>=4.3.2",
    "notebook>=6.5.7",
    "ipython>=8.30.0",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
    "jupytext>=1.17.2",

    # Notebook utilities
    "nbstripout>=0.8.1",      # Strips outputs from Jupyter and IPython notebooks

    # Development tools
    "pre-commit>=4.2.0",      # manage and maintain multi-language pre-commit hooks
    "ruff>=0.12.0",           # Linter & formatter
    "ty>=0.0.1a14",           # Type checker
    "pyright>=1.1.0",         # Type checking
    "ipdb>=0.13.13",          # IPython-enabled pdb
    "pytest>=8.4.1",          # Testing
    # For Databricks
    "build>=1.2.2",           # Build frontend
    "setuptools>=80.7.1",     # Easily download, build, install, upgrade, and uninstall Python packages
    "setuptools-scm>=8.3.1",  # manage your versions by scm tags
    "wheel>=0.45.1",          # A build package format for Python

]

[build-system]
requires = ["setuptools>=80", "wheel"]
build-backend = "setuptools.build_meta"

# Ruff configuration
[tool.ruff]
line-length = 90
target-version = "py312"

[tool.ruff.lint]
# Simple rules: pylint + isort
select = [
    "E",                      # pycodestyle errors
    "W",                      # pycodestyle warnings
    "I",                      # isort (import sorting)
    "PL",                     # pylint rules
]

[tool.ruff.lint.isort]
# isort configuration
force-single-line = false
combine-as-imports = true

[tool.ruff.format]
# Black-compatible formatting (default settings)
quote-style = "double"
exclude = ["*.ipynb"]

# Pyright configuration
[tool.pyright]
include = ["nhpy", "notebooks"]
exclude = ["**/node_modules", "**/__pycache__"]
pythonVersion = "3.12"
typeCheckingMode = "basic"

[tool.pytest.ini_options]
markers = [
    "unit: mark a test as a unit test.",
    "integration: mark a test as an integration test.",
    "skip: skip a test",
]
